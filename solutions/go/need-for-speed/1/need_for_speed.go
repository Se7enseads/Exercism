/* Package speed provides car & track */ package speed; /*Car struct*/ type Car struct { battery, batteryDrain, speed, distance int }; /* NewCar creates a new remote controlled car with full battery and given specifications. */ func NewCar(speed, batteryDrain int) Car { return Car{ 100, batteryDrain, speed, 0 } }; /* Track struct */ type Track struct { distance int }; /* NewTrack creates a new track */  func NewTrack(d int) Track {return Track{d}}; /* Drive drives the car one time. If there is not enough battery to drive one more time, the car will not move. */ func Drive(c Car) Car { if c.battery >= c.batteryDrain { return Car{ c.battery - c.batteryDrain, c.batteryDrain, c.speed, c.distance + c.speed } }; return c }; /* CanFinish checks if a car is able to finish a certain track. */ func CanFinish(c Car, t Track) bool { return c.battery - (t.distance/c.speed)*c.batteryDrain >= 0 }