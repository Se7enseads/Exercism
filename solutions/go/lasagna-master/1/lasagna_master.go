/* Package lasagna provides function to prep & serve lasagna. */ package lasagna; /* PreparationTime estimate the total preparation time based on the number of layers. */ func PreparationTime (layers []string, averageT int) int { if averageT == 0 {averageT = 2}; return len(layers) * averageT }; /* Quantities  determine the quantity of noodles & sauce needed. */ func Quantities (layers []string ) (int, float64) { var noodles int; var sauce int; for _, item := range layers { if item == "noodles" {noodles++}; if item == "sauce" {sauce++} }; return noodles*50, float64(sauce)*0.2 }; /* AddSecretIngredient replaces the last item of your list with the last item from your friends list. */ func AddSecretIngredient(list, ingredients []string) { ingredients[len(ingredients)-1] = list[len(list)-1]; }; /* ScaleRecipe returns the amounts needed for the desired number of portions. */ func ScaleRecipe(lasagna []float64, portion int) []float64 { scaled := make([]float64, len(lasagna)); for i, item := range lasagna {{scaled[i] = (item/2)*float64(portion)}}; return scaled };